{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CNEpicness\\\\Desktop\\\\currAssign\\\\CS\\\\POOSD\\\\MERN Stack\\\\mern-tots\\\\client\\\\src\\\\pages\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from \"../Images/ucf-logo.png\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  var newPassword;\n  var confirmNewPassword;\n  var validationNewPassword;\n  var validationConfirmNewPassword;\n  const [newPasswordMessage, setNewPasswordMessage] = useState(\"\");\n  const [confirmNewPasswordMessage, setConfirmNewPasswordMessage] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let history = useHistory();\n\n  function validateNewPassword() {\n    if (newPassword.value === \"\") {\n      setNewPasswordMessage(\"Please enter a new password.\");\n      return false;\n    }\n\n    if (newPassword.value.length < 6) {\n      setNewPasswordMessage(\"Password must be 6 characters long.\");\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateConfirmNewPassword() {\n    if (confirmNewPassword.value === \"\") {\n      setConfirmNewPasswordMessage(\"Please enter a new password.\");\n      return false;\n    }\n\n    if (confirmNewPassword.value.length < 6) {\n      setConfirmNewPasswordMessage(\"Password must be 6 characters long.\");\n      return false;\n    }\n\n    if (newPassword.value !== confirmNewPassword.value) {\n      setConfirmNewPasswordMessage(\"Passwords should match.\");\n      return false;\n    }\n\n    return true;\n  }\n\n  const doReset = async event => {\n    event.preventDefault();\n    setMessage(\"\");\n    setNewPasswordMessage(\"\");\n    setConfirmNewPasswordMessage(\"\");\n    validationNewPassword = validateNewPassword();\n    validationConfirmNewPassword = validateConfirmNewPassword();\n\n    if (!validationNewPassword || !validationConfirmNewPassword) {\n      return;\n    }\n\n    window.location.href = \"/\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"resetPasswordDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar container-fluid\",\n      style: {\n        backgroundColor: \"#FFC904\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => history.goBack(),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"contentDiv\",\n      className: \"container-fluid text-center p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logoDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"ucf-logo\",\n          style: {\n            borderRadius: 25,\n            width: \"10%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"totsHeader\",\n        style: {\n          color: \"#FFC904\"\n        },\n        children: \"TOP OF THE SCHEDULE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"resetNewPassword\",\n        style: {\n          fontSize: 24\n        },\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: doReset,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"resetNewPassword\",\n          className: \"border-4 w-50 p-3\",\n          style: {\n            borderColor: \"#FFC904\",\n            borderRadius: 25\n          },\n          placeholder: \"Password\",\n          ref: c => newPassword = c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"passwordMessageSpan\",\n          className: \"text-danger\",\n          children: newPasswordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"resetConfirmPassword\",\n          style: {\n            fontSize: 24\n          },\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"resetConfirmPassword\",\n          className: \"border-4 w-50 p-3\",\n          style: {\n            borderColor: \"#FFC904\",\n            borderRadius: 25\n          },\n          placeholder: \"Confirm Password\",\n          ref: c => confirmNewPassword = c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"confirmPasswordMessageSpan\",\n          className: \"text-danger\",\n          children: confirmNewPasswordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"resetButton\",\n          type: \"submit\",\n          className: \"p-3 w-25 m-3\",\n          style: {\n            borderRadius: 25,\n            backgroundColor: \"#FFC904\",\n            fontSize: 24\n          },\n          onClick: doReset,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"resetPasswordResult\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"JbAzJQiVyR1CrTHD0gMDfker3mQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/CNEpicness/Desktop/currAssign/CS/POOSD/MERN Stack/mern-tots/client/src/pages/ResetPassword.js"],"names":["React","useState","logo","Link","useHistory","ResetPassword","newPassword","confirmNewPassword","validationNewPassword","validationConfirmNewPassword","newPasswordMessage","setNewPasswordMessage","confirmNewPasswordMessage","setConfirmNewPasswordMessage","message","setMessage","history","validateNewPassword","value","length","validateConfirmNewPassword","doReset","event","preventDefault","window","location","href","backgroundColor","goBack","borderRadius","width","color","fontSize","borderColor","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,kCAAP;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,MAAIC,WAAJ;AACA,MAAIC,kBAAJ;AACA,MAAIC,qBAAJ;AACA,MAAIC,4BAAJ;AAEA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACW,yBAAD,EAA4BC,4BAA5B,IACJZ,QAAQ,CAAC,EAAD,CADV;AAEA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAIe,OAAO,GAAGZ,UAAU,EAAxB;;AAEA,WAASa,mBAAT,GAA+B;AAC7B,QAAIX,WAAW,CAACY,KAAZ,KAAsB,EAA1B,EAA8B;AAC5BP,MAAAA,qBAAqB,CAAC,8BAAD,CAArB;AACA,aAAO,KAAP;AACD;;AAED,QAAIL,WAAW,CAACY,KAAZ,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAChCR,MAAAA,qBAAqB,CAAC,qCAAD,CAArB;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAED,WAASS,0BAAT,GAAsC;AACpC,QAAIb,kBAAkB,CAACW,KAAnB,KAA6B,EAAjC,EAAqC;AACnCL,MAAAA,4BAA4B,CAAC,8BAAD,CAA5B;AACA,aAAO,KAAP;AACD;;AAED,QAAIN,kBAAkB,CAACW,KAAnB,CAAyBC,MAAzB,GAAkC,CAAtC,EAAyC;AACvCN,MAAAA,4BAA4B,CAAC,qCAAD,CAA5B;AACA,aAAO,KAAP;AACD;;AAED,QAAIP,WAAW,CAACY,KAAZ,KAAsBX,kBAAkB,CAACW,KAA7C,EAAoD;AAClDL,MAAAA,4BAA4B,CAAC,yBAAD,CAA5B;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAED,QAAMQ,OAAO,GAAG,MAAOC,KAAP,IAAiB;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEAR,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,IAAAA,qBAAqB,CAAC,EAAD,CAArB;AACAE,IAAAA,4BAA4B,CAAC,EAAD,CAA5B;AAEAL,IAAAA,qBAAqB,GAAGS,mBAAmB,EAA3C;AACAR,IAAAA,4BAA4B,GAAGW,0BAA0B,EAAzD;;AAEA,QAAI,CAACZ,qBAAD,IAA0B,CAACC,4BAA/B,EAA6D;AAC3D;AACD;;AAEDe,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,GAfD;;AAiBA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAFT;AAAA,6BAIE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,MAAMX,OAAO,CAACY,MAAR,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,iCAA/B;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,+BACE;AACE,UAAA,GAAG,EAAE1B,IADP;AAEE,UAAA,GAAG,EAAC,UAFN;AAGE,UAAA,KAAK,EAAE;AACL2B,YAAAA,YAAY,EAAE,EADT;AAELC,YAAAA,KAAK,EAAE;AAFF;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AADF,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAmBE;AACE,QAAA,OAAO,EAAC,kBADV;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE;AADL,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA2BE;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE;AAAM,QAAA,QAAQ,EAAEX,OAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,kBAFL;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAIE,UAAA,KAAK,EAAE;AACLY,YAAAA,WAAW,EAAE,SADR;AAELJ,YAAAA,YAAY,EAAE;AAFT,WAJT;AAQE,UAAA,WAAW,EAAC,UARd;AASE,UAAA,GAAG,EAAGK,CAAD,IAAQ5B,WAAW,GAAG4B;AAT7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAM,UAAA,EAAE,EAAC,qBAAT;AAA+B,UAAA,SAAS,EAAC,aAAzC;AAAA,oBACGxB;AADH;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AACE,UAAA,OAAO,EAAC,sBADV;AAEE,UAAA,KAAK,EAAE;AACLsB,YAAAA,QAAQ,EAAE;AADL,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAyBE;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA0BE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,sBAFL;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAIE,UAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE,SADR;AAELJ,YAAAA,YAAY,EAAE;AAFT,WAJT;AAQE,UAAA,WAAW,EAAC,kBARd;AASE,UAAA,GAAG,EAAGK,CAAD,IAAQ3B,kBAAkB,GAAG2B;AATpC;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAqCE;AAAA;AAAA;AAAA;AAAA,gBArCF,eAsCE;AAAM,UAAA,EAAE,EAAC,4BAAT;AAAsC,UAAA,SAAS,EAAC,aAAhD;AAAA,oBACGtB;AADH;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAyCE;AAAA;AAAA;AAAA;AAAA,gBAzCF,eA0CE;AACE,UAAA,EAAE,EAAC,aADL;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,KAAK,EAAE;AACLiB,YAAAA,YAAY,EAAE,EADT;AAELF,YAAAA,eAAe,EAAE,SAFZ;AAGLK,YAAAA,QAAQ,EAAE;AAHL,WAJT;AASE,UAAA,OAAO,EAAEX,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eAoFE;AAAM,QAAA,EAAE,EAAC,qBAAT;AAAA,kBAAgCP;AAAhC;AAAA;AAAA;AAAA;AAAA,cApFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgGD;;GA9JQT,a;UAWOD,U;;;KAXPC,a;AAgKT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport logo from \"../Images/ucf-logo.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ResetPassword() {\r\n  var newPassword;\r\n  var confirmNewPassword;\r\n  var validationNewPassword;\r\n  var validationConfirmNewPassword;\r\n\r\n  const [newPasswordMessage, setNewPasswordMessage] = useState(\"\");\r\n  const [confirmNewPasswordMessage, setConfirmNewPasswordMessage] =\r\n    useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  function validateNewPassword() {\r\n    if (newPassword.value === \"\") {\r\n      setNewPasswordMessage(\"Please enter a new password.\");\r\n      return false;\r\n    }\r\n\r\n    if (newPassword.value.length < 6) {\r\n      setNewPasswordMessage(\"Password must be 6 characters long.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateConfirmNewPassword() {\r\n    if (confirmNewPassword.value === \"\") {\r\n      setConfirmNewPasswordMessage(\"Please enter a new password.\");\r\n      return false;\r\n    }\r\n\r\n    if (confirmNewPassword.value.length < 6) {\r\n      setConfirmNewPasswordMessage(\"Password must be 6 characters long.\");\r\n      return false;\r\n    }\r\n\r\n    if (newPassword.value !== confirmNewPassword.value) {\r\n      setConfirmNewPasswordMessage(\"Passwords should match.\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const doReset = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setNewPasswordMessage(\"\");\r\n    setConfirmNewPasswordMessage(\"\");\r\n\r\n    validationNewPassword = validateNewPassword();\r\n    validationConfirmNewPassword = validateConfirmNewPassword();\r\n\r\n    if (!validationNewPassword || !validationConfirmNewPassword) {\r\n      return;\r\n    }\r\n\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div id=\"resetPasswordDiv\">\r\n      <nav\r\n        className=\"navbar container-fluid\"\r\n        style={{ backgroundColor: \"#FFC904\" }}\r\n      >\r\n        <Link onClick={() => history.goBack()}>Back</Link>\r\n      </nav>\r\n      <div id=\"contentDiv\" className=\"container-fluid text-center p-4\">\r\n        <div id=\"logoDiv\">\r\n          <img\r\n            src={logo}\r\n            alt=\"ucf-logo\"\r\n            style={{\r\n              borderRadius: 25,\r\n              width: \"10%\",\r\n            }}\r\n          />\r\n        </div>\r\n        <h1\r\n          id=\"totsHeader\"\r\n          style={{\r\n            color: \"#FFC904\",\r\n          }}\r\n        >\r\n          TOP OF THE SCHEDULE\r\n        </h1>\r\n        <label\r\n          htmlFor=\"resetNewPassword\"\r\n          style={{\r\n            fontSize: 24,\r\n          }}\r\n        >\r\n          New Password\r\n        </label>\r\n        <br />\r\n        <form onSubmit={doReset}>\r\n          <input\r\n            type=\"password\"\r\n            id=\"resetNewPassword\"\r\n            className=\"border-4 w-50 p-3\"\r\n            style={{\r\n              borderColor: \"#FFC904\",\r\n              borderRadius: 25,\r\n            }}\r\n            placeholder=\"Password\"\r\n            ref={(c) => (newPassword = c)}\r\n          />\r\n          <br />\r\n          <span id=\"passwordMessageSpan\" className=\"text-danger\">\r\n            {newPasswordMessage}\r\n          </span>\r\n          <br />\r\n          <label\r\n            htmlFor=\"resetConfirmPassword\"\r\n            style={{\r\n              fontSize: 24,\r\n            }}\r\n          >\r\n            Confirm New Password\r\n          </label>\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            id=\"resetConfirmPassword\"\r\n            className=\"border-4 w-50 p-3\"\r\n            style={{\r\n              borderColor: \"#FFC904\",\r\n              borderRadius: 25,\r\n            }}\r\n            placeholder=\"Confirm Password\"\r\n            ref={(c) => (confirmNewPassword = c)}\r\n          />\r\n          <br />\r\n          <span id=\"confirmPasswordMessageSpan\" className=\"text-danger\">\r\n            {confirmNewPasswordMessage}\r\n          </span>\r\n          <br />\r\n          <button\r\n            id=\"resetButton\"\r\n            type=\"submit\"\r\n            className=\"p-3 w-25 m-3\"\r\n            style={{\r\n              borderRadius: 25,\r\n              backgroundColor: \"#FFC904\",\r\n              fontSize: 24,\r\n            }}\r\n            onClick={doReset}\r\n          >\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n        <span id=\"resetPasswordResult\">{message}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}